Command line:
"travis -i input.txt -p ../../../traj/CDP_224_example.xyz"


  ________                                 __
 /        |                               /  |
 ########/ ______    ______    __     __  ##/    _______
    ## |  /      \  /      \  /  \   /  | /  |  /       |
    ## | /######  | ######  | ##  \ /##/  ## | /#######/
    ## | ## |  ##/  /    ## |  ##  /##/   ## | ##      \
    ## | ## |      /####### |   ## ##/    ## |  ######  |
    ## | ## |      ##    ## |    ###/     ## | /     ##/
    ##/  ##/        #######/      #/      ##/  #######/

    TRajectory Analyzer and VISualizer  -  Open-source free software under GNU GPL v3

    Copyright (c) Martin Brehm      (2009-2021), University of Halle (Saale)
                  Martin Thomas     (2012-2021)
                  Sascha Gehrke     (2016-2021), University of Bonn
                  Barbara Kirchner  (2009-2021), University of Bonn

    http://www.travis-analyzer.de

    Please cite: J. Chem. Phys. 2020, 152 (16), 164105.         (DOI 10.1063/5.0005078 )
                 J. Chem. Inf. Model. 2011, 51 (8), 2007-2023.  (DOI 10.1021/ci200217w )

    There is absolutely no warranty on any results obtained from TRAVIS.

 #  Running on pop-os at Tue Dec 21 21:41:08 2021 (PID 13184)
 #  Running in /home/alex/Documents/Studium_Chemie/HiWi/ThC_HiWi/c_stuff/traj_c/example/reference_small/calculations/oacf_P_O
 #  Version: May 21 2021, built at Oct  5 2021, 16:13:10, compiler "10.3.0", GCC 10.3.0
 #  Target platform: Linux, __cplusplus=201402L, Compile flags: NEW_CHARGEVAR DEBUG_ARRAYS 
 #  Machine: x86_64, int=4b, long=8b, addr=8b, 0xA0B0C0D0=D0,C0,B0,A0.
 #  Home: /home/alex,  Executable: /home/alex/bin/travis
 #  Input from input.txt, Output to terminal

    >>> Please use a color scheme with dark background or specify "-nocolor"! <<<

    Loading configuration from /home/alex/.travis.conf ...

    Opening position trajectory ../../../traj/CDP_224_example.xyz ...

    Trajectory contains approximately 1000 frames (just a *guess* from the file size of 8.00 MiB).

    128 atoms in the system: 16x Cs, 32x H, 64x O, 16x P

    System extent:  X = {     -3 ..  +1029 pm }, dX = 1032 pm
      (in step 1)   Y = {    -65 ..   +984 pm }, dY = 1049 pm
                    Z = {    -24 ..  +1983 pm }, dZ = 2008 pm

    The "advanced mode" offers seldomly required features, including support for non-orthorhombic
    simulation cells, NPT ensemble, non-periodic systems, user-definded virtual atoms, pseudomolecules, ...

    Use the advanced mode until the analysis selection menu (y/n)? [no] n

    A cell vector of 1827.95 pm would result in a density of 1.0 g/cm^3.

    Are the 3 cell vectors of the same size (yes/no)? [yes] n
    Enter length of X cell vector in pm: 992.2
    Enter length of Y cell vector in pm: 992.2
    Enter length of Z cell vector in pm: 1984.4

    The box size is 992.20 x 992.20 x 1984.40 pm.
    The overall box density is 3.126559 g/cm^3.

    Using the following element data:

      Element | Ord. Number |  Mass / u | Cov. Radius / pm | VdW Radius / pm | Color
    ----------|-------------|-----------|------------------|-----------------|----------
      H       |           1 |   1.00798 |            37.00 |          109.00 | #FFFFFF
      O       |           8 |  15.99940 |            75.00 |          152.00 | #FF0000
      P       |          15 |  30.97376 |           111.00 |          180.00 | #E47100
      Cs      |          55 | 132.90545 |           225.00 |          343.00 | #00FFFF


    The trajectory contains some metal atoms.
    In many cases, these are ions, and should not form any covalent bonds.

      Exclude Cs atoms from bond recognition (y/n)? [yes] <RETURN>


    Initialized spatial domain engine with 3 x 3 x 7 cells, min. diameter = 255 pm.

    Molecule recognition [##########################################]

    32 molecules found.

    Sorting atom types...
    Setting up bond lists...
    Building atom codes...
    Creating refined topological atom order...
      [################################] Done.
    Creating bond list...
    Creating angle list...
    Grouping together equivalent molecules...
    Found 4 unique molecule types.
    Sorting molecule types by molecular mass...
    Found 0 rings.
    Molecule recognition finished.

Output of bond matrices:

*** Molecule 1: Cs; Representant 1; Distances in pm ***
[only 1 Atom]

*** Molecule 2: H3O4P; Representant 1; Distances in pm ***

    H1  H2  H3  O1  O2  O3  O4  P1 
H1  ***  -   -  107  -   -   -   -  
H2   -  ***  -   -  105  -   -   -  
H3   -   -  ***  -   -  103  -   -  
O1  107  -   -  ***  -   -   -  162 
O2   -  105  -   -  ***  -   -  162 
O3   -   -  103  -   -  ***  -  162 
O4   -   -   -   -   -   -  *** 157 
P1   -   -   -  162 162 162 157 *** 

    Atoms H1, H2, H3 are equivalent.
    Atoms O1, O2, O3 are equivalent.

*** Molecule 3: H2O4P; Representant 1; Distances in pm ***

    H1  H2  O1  O2  O3  O4  P1 
H1  ***  -   99  -   -   -   -  
H2   -  ***  -  102  -   -   -  
O1   99  -  ***  -   -   -  161 
O2   -  102  -  ***  -   -  158 
O3   -   -   -   -  ***  -  154 
O4   -   -   -   -   -  *** 153 
P1   -   -  161 158 154 153 *** 

    Atoms H1, H2 are equivalent.
    Atoms O1, O2 are equivalent.
    Atoms O3, O4 are equivalent.

*** Molecule 4: HO4P; Representant 1; Distances in pm ***

    H1  O1  O2  O3  O4  P1 
H1  *** 104  -   -   -   -  
O1  104 ***  -   -   -  166 
O2   -   -  ***  -   -  153 
O3   -   -   -  ***  -  150 
O4   -   -   -   -  *** 160 
P1   -  166 153 150 160 *** 

    Atoms O2, O3, O4 are equivalent.


*** The following 4 kinds of molecules have been recognized:
    (ordered by molecular mass)

  - Molecule 1:  Cs (16 pieces, 132.91 g/mol)
      (1 noneq. atom, 0 noneq. bonds, 0 noneq. angles)
      Concentration:  13.600078 mol/liter

  - Molecule 2:  H3O4P (1 piece, 98.00 g/mol)
      (4 noneq. atoms, 3 noneq. bonds, 3 noneq. angles)
      Concentration:   0.850005 mol/liter

  - Molecule 3:  H2O4P (14 pieces, 96.99 g/mol)
      (4 noneq. atoms, 3 noneq. bonds, 4 noneq. angles)
      Concentration:  11.900069 mol/liter

  - Molecule 4:  HO4P (1 piece, 95.98 g/mol)
      (4 noneq. atoms, 3 noneq. bonds, 3 noneq. angles)
      Concentration:   0.850005 mol/liter


    If you switch on "USE_OPENBABEL" in config.h, TRAVIS can print SMILES strings of your molecules.

    You can create images of the structural formulas with the atom labels for easier
    identification of the atoms (requires installed GraphViz package - see www.graphviz.org).

    Create images of the structural formulas (y/n)? [no] <RETURN>

    Accept these molecules (y) or change something (n)? [yes] n

    If you want some atom types to form no bonds at all, assign covalent radius 0 to them.

    *** Modify Molecules ***

    Your choices:

    1.) Change covalent atom radii used for bond recognition
    2.) Break specific bonds
    3.) Rename elements
    4.) Split molecule type into two types
    5.) Add bonds / add solvation shell to molecule

    Please select: [done] 1

    A covalent radius of 0 means that the element can't form any bonds.

    These values have been used (covalent radii from literature multiplied with 1.15):

      - Cs      0.0 pm
      - H      42.5 pm
      - O      86.2 pm
      - P     127.6 pm

    The radius of which element do you want to change (enter element label)? [done] H
    Please enter new bond radius for H in pm: [42.5] 0

      Atom H will form no bonds now.

    Also remove this atom type from the system (y/n)? [no] <RETURN>

    The radius of which element do you want to change (enter element label)? [done] <RETURN>


    *** Modify Molecules ***

    Your choices:

    1.) Change covalent atom radii used for bond recognition
    2.) Break specific bonds
    3.) Rename elements
    4.) Split molecule type into two types
    5.) Add bonds / add solvation shell to molecule

    Please select: [done] <RETURN>

    Going back to molecule recognition with changed settings.



    Initialized spatial domain engine with 3 x 3 x 7 cells, min. diameter = 255 pm.

    Molecule recognition [##########################################]

    64 molecules found.

    Sorting atom types...
    Setting up bond lists...
    Building atom codes...
    Creating refined topological atom order...
      [############################################################] Done.
    Creating bond list...
    Creating angle list...
    Grouping together equivalent molecules...
    Found 3 unique molecule types.
    Sorting molecule types by molecular mass...
    Found 0 rings.
    Molecule recognition finished.

Output of bond matrices:

*** Molecule 1: Cs; Representant 1; Distances in pm ***
[only 1 Atom]

*** Molecule 2: O4P; Representant 1; Distances in pm ***

    O1  O2  O3  O4  P1 
O1  ***  -   -   -  154 
O2   -  ***  -   -  153 
O3   -   -  ***  -  161 
O4   -   -   -  *** 158 
P1  154 153 161 158 *** 

    Atoms O1, O2, O3, O4 are equivalent.

*** Molecule 3: H; Representant 1; Distances in pm ***
[only 1 Atom]


*** The following 3 kinds of molecules have been recognized:
    (ordered by molecular mass)

  - Molecule 1:  Cs (16 pieces, 132.91 g/mol)
      (1 noneq. atom, 0 noneq. bonds, 0 noneq. angles)
      Concentration:  13.600078 mol/liter

  - Molecule 2:  O4P (16 pieces, 94.97 g/mol)
      (2 noneq. atoms, 1 noneq. bond, 1 noneq. angle)
      Concentration:  13.600078 mol/liter

  - Molecule 3:  H (32 pieces, 1.01 g/mol)
      (1 noneq. atom, 0 noneq. bonds, 0 noneq. angles)
      Concentration:  27.200157 mol/liter


    If you switch on "USE_OPENBABEL" in config.h, TRAVIS can print SMILES strings of your molecules.

    You can create images of the structural formulas with the atom labels for easier
    identification of the atoms (requires installed GraphViz package - see www.graphviz.org).

    Create images of the structural formulas (y/n)? [no] <RETURN>

    Accept these molecules (y) or change something (n)? [yes] <RETURN>

    Uniting molecules which have been broken by wrapping...

    Determining maximum molecular diameters...

    Found the following maximal molecular diameters:

      (*) Molecule 1 (Cs):   (only one atom)

      (*) Molecule 2 (O4P):    279.12 pm

      (*) Molecule 3 (H):    (only one atom)


    The atoms are currently ordered by topological priority.

    Defining virtual atom #1 as molecular Center of Geometry:
      - Cs...
      - O4P...
      - H...

    Defining virtual atom #2 as molecular Center of Mass:
      - Cs...
      - O4P...
      - H...

    Defining molecular dipole vectors:

      The last virtual atom of each molecule is defined as the tip of the dipole vector
      starting in center of mass (#2). 1 Debye corresponds to 100 pm of vector length.
      Only useful if dipole/charge data is provided. Otherwise vector has always length of zero.

      - Dipole vector #2 --> #3 in Cs ...
      - Dipole vector #2 --> #3 in O4P ...
      - Dipole vector #2 --> #3 in H ...

>>> 9 virtual atoms have been defined: >>>

    #1 in Cs: Center of Geometry.
    #2 in Cs: Center of Mass.

    #3 in Cs - tip of molecular dipole vector starting in #2.

    #1 in O4P: Center of Geometry.
    #2 in O4P: Center of Mass.

    #3 in O4P - tip of molecular dipole vector starting in #2.

    #1 in H: Center of Geometry.
    #2 in H: Center of Mass.

    #3 in H - tip of molecular dipole vector starting in #2.

<<< End of virtual atoms <<<


>>> List of functions <<<

 *** Static (time independent) Functions
 cdf      - Combined Distribution Function
 rdf      - Radial Distribution Function
 adf      - Angular Distribution Function
 ddf      - Dihedral Distribution Function
 pldf     - Point-Plane Distance Distribution
 lidf     - Point-Line Distance Distribution
 plproj   - Plane Projection Distribution
 dprof    - Fixed Plane Density Profile
 fpp      - Fixed Plane Projection
 dens     - Density Distribution Function
 sdf      - Spatial Distribution Function
 psdf     - Pseudo SDF (only 2 ref. atoms)
 dip      - Dipole Distribution Function
 cond     - Evaluate Structural Condition
 sfac     - Compute Structure Factor
 agtopo   - Aggregation Topology Analysis
 cmat     - Contact Matrix / Connection Matrix
 geodens  - Particle Density inside Geometric Object

 *** Dynamic (time dependent) Functions
 vdf      - Velocity Distribution Function
 fdf      - Force Distribution Function
 msd      - Mean Square Displacement / Diffusion Coefficients
 acf      - Velocity Autocorrelation Functions
 rdyn     - Vector Reorientation Dynamics
 vhcf     - Van Hove Correlation Function
 aggr     - Aggregation Functions (DACF, DLDF, DDisp)
 hbond    - Hydrogen Bond Dynamics
 ionpair  - Diffusion Corrected Ion Pair Dynamics
 tddf     - Time Dependent Distribution Functions

 *** Spectroscopic Functions
 spec     - New Spectroscopy Module (IR, Raman, VCD, ROA)
 power    - Calculate Power Spectrum
 nc       - Normal Coordinate Analysis
 ir       - (old) Calculate IR Spectrum
 raman    - (old) Calculate Raman Spectrum
 vcd      - (old) Calculate VCD Spectrum
 drst     - Save Dipole Restart File
 mrst     - Save Magnetic Moment Restart File
 pol      - Set up Polarizability Calculation

 *** Miscellaneous Functions
 env      - Save Trajectory of RM Environment / TDO Plot
 proc     - Save Processed Trajectory
 cut      - Cut Clusters
 reg      - Region-specific Analysis
 chi      - Chirality Analysis
 eck      - Transform to Eckart Frame
 swan     - Sort Wannier Centers
 voro     - Basic Voronoi Analysis
 vori     - Voronoi Integration Functions
 vorochg  - Voronoi Charge Optimization
 doma     - Domain Analysis
 order    - Order Parameters
 hole     - Hole Theory based Analysis

   (You may specify multiple analyses at once, but
    the safe way is to perform only one kind of analysis at a time.)

    Which functions to compute (comma separated)? <RETURN>

Unknown Function: ""
Invalid input.

    Which functions to compute (comma separated)? rdyn

 rdyn    - Vector Reorientation Dynamics

    The advanced mode includes some options which are quite powerful,
    yet possibly weird or seldomly required.

    Use the advanced mode for the main part (y/n)? [no] <RETURN>

    Enter the physical time distance between successive trajectory frames in fs: [0.5] <RETURN>


>>> Observation 1 >>>

    Which molecule should be observed (Cs=1, O4P=2, H=3)? 2

>>> Vector Reorientation Dynamics >>>

    All atoms will be taken from the OM O4P.

    Should the vector depict position (1), dipole (2), velocity (3) or force (4)? [1] <RETURN>

    Should the vector connect 2 points (0) or stand perpendicular to 3 points (1)? [0] <RETURN>
      Please enter the atom(s) at the base point (e.g. C7): P
      Please enter the atom(s) at the tip point (e.g. C7): O

    Enter another set of vectors (y/n)? [no] <RETURN>

    Observing 4 vectors per OM.

    Hint: The resolution of the ACF may never be higher than the number of processed steps.
          Suggested is up to 50 percent of the processed steps.

    Enter the correlation depth of the vector ACF (in trajectory frames): [300] <RETURN>

    CalcFFTSize(): 300 = 2^2 * 3^1 * 5^2. All prime factors within 2, 3, 5. Fine.

    Take each n-th time step for temporal axis: [1] <RETURN>

    Perform autocorrelation of 2nd Legendre polynomial (y/n)? [no] <RETURN>

    Fit poly-exponential functions to reorientation dynamics and integrate over [0,infinity) (y/n)? [yes] <RETURN>

    TRAVIS will fit functions with different count of exponential terms to your data.
    This enables you to see how many different processes contribute to your reorientation.

    How many exponential terms to use at most: [3] <RETURN>

    Note: The question for reorientation spectra has been moved to the advanced mode.

<<< End of Vector Reorientation Dynamics <<<


<<< End of Observation 1 <<<

    Add another observation (y/n)? [no] <RETURN>

>>> Observation List >>>

  *** Observation 1
    - Reorientation Dynamics: O4P_[P_O]

<<< End of Observation List <<<


    Not wrapping molecules into the box.

    Not removing center of mass movement of the box.

    Skip repeated time steps (y/n)? [no] <RETURN>
    In which trajectory frame to start processing the trajectory? [1] <RETURN>
    How many trajectory frames to read (from this position on)? [all] <RETURN>
    Use every n-th read trajectory frame for the analysis: [1] <RETURN>

    Using 1000 time steps: Every 1st within range 1 - approx. 1000.

########## All information collected ##########

>>> Initialization >>>

Initializing observation 1...
  Creating reorientation dynamics...
    RDyn Cache: Trying to allocate 1550.00 KiB of memory...

<<< End of Initialization <<<


##########   Starting Main Pass   ##########

Hint: Press CTRL+C once to softly interrupt analysis and still write the results.
      Creating an empty file named EXIT ("touch EXIT") has the same effect.

Step      0 ..................................................
Step     50 ................................................
End of trajectory file reached.


##########   Main pass done   ##########

1000 time steps processed.



    Finishing analyses:
----------------------------------------------------------------------------------------------------------


>>> Observation 1 >>>

* Vector Reorientation Dynamics
    Autocorrelating cached vectors...
      [############################################################]
    16329600 bin entries.

    Performing Levenberg-Marquardt fit with 1-exponential curve...
      f(x) = c1 * exp(-x/e1^2) + c2 * exp(-x/e2^2) + ...
      Starting values:
        c1   =    1.000000      e1  =     0.223607  (     0.05000 ps)
    Fitting [########]
    sse =     0.06682665,  sst =     0.05294420,  sse/sst =     1.26220893
    Warning: sse/sst > 1.0, correlation coefficient R = sqrt( 1.0 - sse/sst ) is indeterminate.
      Status: success (the relative error in the sum of squares is at most tol) (43 cycles).
        c1   =    1.000355      e1  =     1.451446    tau(1) =       2.107444 ps
        R    =          -nan  Chi^2 =   0.55639203
      Curve integral: tau(total) =       2.107444 ps.
    Fitting done.

    Performing Levenberg-Marquardt fit with 2-exponential curve...
      f(x) = c1 * exp(-x/e1^2) + c2 * exp(-x/e2^2) + ...
      Starting values:
        c1   =    0.500000      e1  =     0.022361  (     0.00025 ps)
        c2   =    0.500000      e2  =     0.707107  (     0.25000 ps)
    Fitting [######################################]
    sse =     0.11559251,  sst =     0.05294420,  sse/sst =     2.18328923
    Warning: sse/sst > 1.0, correlation coefficient R = sqrt( 1.0 - sse/sst ) is indeterminate.
      Status: success (the relative error between x and the solution is at most tol) (221 cycles).
        c1   =    1.000238      e1  =     1.371993    tau(1) =       1.882813 ps
        c2   =    0.000000      e2  =     0.022447    tau(2) =       0.000000 ps
        R    =          -nan  Chi^2 =   0.56522555
      Curve integral: tau(total) =       1.882813 ps.
    Fitting done.

    Performing Levenberg-Marquardt fit with 3-exponential curve...
      f(x) = c1 * exp(-x/e1^2) + c2 * exp(-x/e2^2) + ...
      Starting values:
        c1   =    0.333333      e1  =     0.022361  (     0.00017 ps)
        c2   =    0.333333      e2  =     0.125743  (     0.00527 ps)
        c3   =    0.333333      e3  =     0.707107  (     0.16667 ps)
    Fitting [#######################################]
    sse =     3.33030376,  sst =     0.05294420,  sse/sst =    62.90214013
    Warning: sse/sst > 1.0, correlation coefficient R = sqrt( 1.0 - sse/sst ) is indeterminate.
      Status: success (the relative error between x and the solution is at most tol) (313 cycles).
        c1   =    0.884074      e1  =     0.742602    tau(1) =       0.487529 ps
        c2   =    0.117569      e2  =     1.262384    tau(2) =       0.187359 ps
        c3   =    0.000000      e3  =     0.049687    tau(3) =       0.000000 ps
        R    =          -nan  Chi^2 =   1.82695040
      Curve integral: tau(total) =       0.674889 ps.
    Fitting done.

    Reorientation dynamics fit integral overview:
      (use the row with the highest R value)

      Degree  R             Reorientation time / ps
      1             -nan    2.10744   
      2             -nan    1.88281   
      3             -nan    0.674889  

    Resulting reorientation time: 2.42092E-322 ps

    Saving result as rdyn_O4P_[P_O].csv ...


----------------------------------------------------------------------------------------------------------
    Finished all analyses.


    Note: To show a list of all persons who contributed to TRAVIS,
          please add "-credits" to your command line arguments, or set the
          variable "SHOWCREDITS" to "TRUE" in your travis.conf file.

    Source code from other projects used in TRAVIS:
      - lmfit     from Joachim Wuttke
      - kiss_fft  from Mark Borgerding
      - voro++    from Chris Rycroft

    http://www.travis-analyzer.de

    Please cite all of the following articles for the analyses you have used:

  * For TRAVIS in general:

    "TRAVIS - A Free Analyzer for Trajectories from Molecular Simulation",
    M. Brehm, M. Thomas, S. Gehrke, B. Kirchner; J. Chem. Phys. 2020, 152 (16), 164105.   (DOI 10.1063/5.0005078 )

    "TRAVIS - A Free Analyzer and Visualizer for Monte Carlo and Molecular Dynamics Trajectories",
    M. Brehm, B. Kirchner; J. Chem. Inf. Model. 2011, 51 (8), pp 2007-2023.   (DOI 10.1021/ci200217w )

*** The End ***

